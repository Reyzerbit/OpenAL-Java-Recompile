package com.jaketherey;

import java.awt.Component;
import java.awt.Container;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;

public class appletContent extends JFrame {
	
	//Constrains
	
	GridBagConstraints constr = new GridBagConstraints();
	
	//Layout
	
	GridBagLayout gBL = new GridBagLayout();
	
	
	public void calculator() {
		
		setLayout(gBL);
		
		//Buttons
		
		final JButton buttonRun = new JButton("Run");
		JButton buttonClear = new JButton("Clear");
		
		//Text Fields
		
		final JTextField field1 = new JTextField("0");
		final JTextField field2 = new JTextField("0");
		final JTextField field3 = new JTextField("0");
		final JTextField field4 = new JTextField("0");
		final JTextField field5 = new JTextField("0");
		final JTextField field6 = new JTextField("0");
		final JTextField field7 = new JTextField("0");
		final JTextField field8 = new JTextField("0");
		final JTextField field9 = new JTextField("0");
		final JTextField field10 = new JTextField("0");
		
		final JTextField units = new JTextField("0");
		
		//Labels
		final JLabel title1 = new JLabel ("Fixed Costs");
		final JLabel title2 = new JLabel ("Variable Costs");
		
		final JLabel finalAnswer = new JLabel();
		
		final JLabel answerLabel = new JLabel ("Units To Break Even:");
		final JLabel unitsLabel = new JLabel ("Cost / Units:");
        
        //Constraints//gridx//gridy//gridheight//gridwidth//
		
		constr.gridx=0;
		constr.gridy=0;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(title1, constr);
		add(title1);
		
		constr.gridx=0;
		constr.gridy=1;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(field1, constr);
		add(field1);
		
		constr.gridx=0;
		constr.gridy=2;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(field2, constr);
		add(field2);
		
		constr.gridx=0;
		constr.gridy=3;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(field3, constr);
		add(field3);
		
		constr.gridx=0;
		constr.gridy=4;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(field4, constr);
		add(field4);
		
		constr.gridx=0;
		constr.gridy=5;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(field5, constr);
		add(field5);
		
		constr.gridx=0;
		constr.gridy=6;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(unitsLabel, constr);
		add(unitsLabel);
		
		constr.gridx=0;
		constr.gridy=7;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(answerLabel, constr);
		add(answerLabel);
		
		constr.gridx=0;
		constr.gridy=8;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(buttonRun, constr);
		add(buttonRun);
		
		constr.gridx=2;
		constr.gridy=0;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(title2, constr);
		add(title2);
		
		constr.gridx=2;
		constr.gridy=1;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(field6, constr);
		add(field6);
		
		constr.gridx=2;
		constr.gridy=2;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(field7, constr);
		add(field7);
		
		constr.gridx=2;
		constr.gridy=3;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(field8, constr);
		add(field8);
		
		constr.gridx=2;
		constr.gridy=4;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(field9, constr);
		add(field9);
		
		constr.gridx=2;
		constr.gridy=5;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(field10, constr);
		add(field10);
		
		constr.gridx=2;
		constr.gridy=6;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(units, constr);
		add(units);
		
		constr.gridx=2;
		constr.gridy=7;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(finalAnswer, constr);
		add(finalAnswer);
		
		constr.gridx=2;
		constr.gridy=8;
		constr.gridheight=1;
		constr.gridwidth=2;
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		gBL.setConstraints(buttonClear, constr);
		add(buttonClear);
		
		buttonRun.addActionListener(new ActionListener() {

			@Override
			
			public void actionPerformed(ActionEvent e) {
				
				double answer = Double.parseDouble(field1.getText());
				double answer1 = Double.parseDouble(field2.getText());
				double answer2 = Double.parseDouble(field3.getText());
				double answer3 = Double.parseDouble(field4.getText());
				double answer4 = Double.parseDouble(field5.getText());
				double answer5 = Double.parseDouble(field6.getText());
				double answer6 = Double.parseDouble(field7.getText());
				double answer7 = Double.parseDouble(field8.getText());
				double answer8 = Double.parseDouble(field9.getText());
				double answer9 = Double.parseDouble(field10.getText());
				
				double costPerUnit = Double.parseDouble(units.getText());
				
				double fixedCosts = (answer + answer1 + answer2 + answer3 + answer4);
				
				double variableCosts = (answer5 + answer6 + answer7 + answer8 + answer9);
				
				String done = calcBreak.calc(costPerUnit, fixedCosts, variableCosts);
				
				finalAnswer.setText(done);
			}
			
		});
		
		buttonClear.addActionListener(new ActionListener() {

			@Override
			
			public void actionPerformed(ActionEvent e) {
				
				field1.setText("0");
				field2.setText("0");
				field3.setText("0");
				field4.setText("0");
				field5.setText("0");
				field6.setText("0");
				field7.setText("0");
				field8.setText("0");
				field9.setText("0");
				field10.setText("0");
				finalAnswer.setText("");
				units.setText("0");
				
			}
			
		});
		
	}
	
	private void addComponent(Container container, Component component, int column, int row, int heigth, int width){
		constr.weightx=1.0;
		constr.weighty=1.0;
		constr.fill=constr.BOTH;
		constr.anchor=constr.CENTER;
	}

}
